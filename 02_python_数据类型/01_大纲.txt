一. 运算符
逻辑运算:
    and,并且,左右两端同时为真,结果才能是真.
    or,或者,左右两端有一个是真.结果就是真.
    not,非,取反的意思,非真即假,非假即真.

    and,or,not进行组合计算的时候.
    注意了,我们写代码不要这么写.
    a and b and c or d
    我们写的时候.根据你对优先级的需要,给出小括号.
    (a and (b and c)) or d

    计算规则:
        1. 相同的运算符之间,从左向右算
        a and b and c and d

        2. 如果遇到不同的运算符组合.需要注意,计算优先级顺序如下：
            () => not => and => or

            # print(1 > 2 and 2 > 4 or 3 < 6 or 4 < 7 and 5 > 8)   # 结果 T
            # print(not 2 > 1 and 3 < 4 or 4 > 5 and 2 > 1 and 9 > 8 or 7 < 6) # 结果 F

        3. and和or的逻辑
        # 0可以表示假
        # 非0 可以表示真.
            a and b
            a如果是0,结果就是0 否则结果是b
            a or b
            a如果是0,结果是b,否则结果是a
        # or 的逻辑和and是相反的

成员运算：
    in 是否存储在于xxxx
    not in 是否不存在于xxxx



二. 关于bool类型

    在python中所有表示空的东西都可以认为是False
    0, "", [], O, {, set(), b'', None

    if not xxxx:
        xxxx # 如果没东西. 要干嘛 ...


三. 关于字符串类型(重点)
字符串在python中是一个不可变的数据类型
在Python中，字符串的不可变性意味着你永远不能"原地"修改字符串，所有修改操作都会返回新的字符串对象。
    1. 索引和切片
        s[索引] 索引从0开始计算
        例如：
            s = "刘伟666"
            print(s[1])
            # 结果为输出 伟
            print(s[1], s[0]) #先输出伟 再输出刘
        切片：
        # 在Python中，可以使用切片从字符串中提取子串，切片适用于字符串、列表、元组、range对象等类型。
        s[start: end: step]
            start: 开始的索引位置
            end: 结束的索引位置(终止位置是不包括的,所以要写终止位置的后一位序号)
            step: 步长 (默认是1的情况下,start和end的方向必须为正,否则结果是空列表,如果要负方向取值，则需要使用步长)
                1. 正数: 从左向右取
                2. 负数: 从右向左取

            # 切片使用冒号:
                lst = ["刘妍", "刘伟", "杨妍", "杨伟"]
                print(lst[-3:-1])
                print(lst[::-1])
                print(lst[::1])
                print(lst[-3:-4])


    2. Python中使用 单引号、双引号或三引号 引起来的字符序列就是字符串(string)
        三引号字符串可以进行多行输出(换行输出)：
            s1 = '''abc123!@#'''  # 单行字符串
            s2 = '''abc
                    123'''        # 多行输出(换行输出)

    3. 字符串的运算(支持加法和乘法两种运算)
        加法：多个字符串按次序合并为一个字符串，且只能字符串和字符串合并(如果有数字需要转为字符串类型)
            s1 = '张' + '3'
            s2 = '3'  + '张'
            s3 = '张' + int(3)
        乘法：一个字符串乘以数字n，可以得到n次复制的数字
            s1 = '张' * 10

    4. 转义字符
        反斜杠(\)是一个特殊字符，表示”转义”
        如:\n表示换行、\\表示反斜杠、\’ 表示单引号字符、\t表示制表符
            \t          制表符(tab)缩进 一个\t 默认等于四个空格
        例如：
            print("这是一个\n换行")
            print("这是一个反斜杠\\”)
            print("输出双引号\"作为普通字符”)

1. capitalize() 首字母变成大写.
2. title() 每个单词的首字母变成大写.
3. strip() 重点. 用来去掉字符串左右两端的空白.
4. replace() 重点. 字符串替换
5. split() 重点. 字符串切割
6. startswith()需要知道. 判断字符串是否以xxx开头
7. upper()重点. 把字符串转化成大写
8. join() 重点. 字符串拼接.
9. len()注意,Len是内置函数,不是字符串独有的.计算长度
10. find 查找,找到了给索引,找不到给-1
11. index 索引,找到了给索引,找不到报错
12. isdigit 判断是否是数字组成的 缺陷,无法判断小数 ...


四. 关于列表(重点)
    用来存储大量数据
    python中使用[]表示列表
    列表也有索引、切片，逻辑和字符串的索引、切片完全相同。

    创建列表的方式：
        1. 直接写[]
        2. list()


    列表是一种可以变化的数据类型：
        1.新增数据
            append()  # append没有返回值，在列表的末尾追加新内容
            insert()  # 在指定的位置插入新数据
            extend()  # 把某个列表合并到当前列表中
        2.修改数据
            用索引进行修改
                list[index序号] = 新数据
        3.删除数据
            pop(index) 根据指定的索引来删除数据，返回被删除的数据
            remove(数据)根据给的数据进行删除
        4.查询数据
            1.直接用索引查询
            2.利用for循环进行遍历
            for item in list:
                xxxx
            3.使用range函数和len函数
                    range()
                    让for循环可以进行数数
                    range(n)         0~n
                    range(m, n)      m~n
                    range(m, n, p)   m~n每p个出来1个

            for i in range(len(list)):
                item = list[i]
                xxxx
        #5.列表常用的
        lst = [11, 22, 33]
        print(lst.index(22))  # 查看22这个元素在表中的索引位置

        lst.reverse()  # 反转表中的内容
        print(lst)

        lst.sort()     # 排序，(如果是数字可以正确排序)
        print(lst)


五. 关于元组(不做重点)
    不可以变的列表，不能进行增删改的操作
    在python中用()表示元组
    元组的末尾一般都会给一个，用来和算数优先级做区分
       (1)  (1,)
    空元组创建：tuple()

六. 关于字典类型(重点)
七. 关于set集合(不做重点)
八. 文件操作(重点)
九. 聊聊函数(待定)
"""