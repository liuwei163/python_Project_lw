1. 运算符
逻辑运算:
    and,并且,左右两端同时为真,结果才能是真.
    or,或者,左右两端有一个是真.结果就是真.
    not,非,取反的意思,非真即假,非假即真.

    and,or,not进行组合计算的时候.
    注意了,我们写代码不要这么写.
    a and b and c or d
    我们写的时候.根据你对优先级的需要,给出小括号.
    (a and (b and c)) or d

    计算规则:
        1. 相同的运算符之间,从左向右算
        a and b and c and d

        2. 如果遇到不同的运算符组合.需要注意,计算优先级顺序如下：
            () => not => and => or

            # print(1 > 2 and 2 > 4 or 3 < 6 or 4 < 7 and 5 > 8)   # 结果 T
            # print(not 2 > 1 and 3 < 4 or 4 > 5 and 2 > 1 and 9 > 8 or 7 < 6) # 结果 F

        3. and和or的逻辑
        # 0可以表示假
        # 非0 可以表示真.
            a and b
            a如果是0,结果就是0 否则结果是b
            a or b
            a如果是0,结果是b,否则结果是a
        # or 的逻辑和and是相反的

成员运算：
    in 是否存储在于xxxx
    not in 是否不存在于xxxx



2. 关于bool类型

    在python中所有表示空的东西都可以认为是False
    0, "", [], O, {, set(), b'', None

    if not xxxx:
        xxxx # 如果没东西. 要干嘛 ...


3. 关于字符串类型(重点)
    1. 索引和切片
        s[索引] 索引从0开始计算
        s[start: end: step]
            start:开始的索引位置
            end:结束的索引位置(永远取不到)
            step:步长
                1. 正数: 从左向右
                2. 负数: 从右向左

    2. Python中使用 单引号、双引号或三引号 引起来的字符序列就是字符串(string)
        三引号字符串可以进行多行输出(换行输出)：
            s1 = '''abc123!@#'''  # 单行字符串
            s2 = '''abc
                    123'''        # 多行输出(换行输出)

    3. 字符串的运算(支持加法和乘法两种运算)
        加法：多个字符串按次序合并为一个字符串，且只能字符串和字符串合并(如果有数字需要转为字符串类型)
            s1 = '张' + '3'
            s2 = '3'  + '张'
            s3 = '张' + int(3)
        乘法：一个字符串乘以数字n，可以得到n次复制的数字
            s1 = '张' * 10

1. capitalize() 首字母变成大写.
2. title() 每个单词的首字母变成大写.
3. strip() 重点. 用来去掉字符串左右两端的空白.
4. replace() 重点. 字符串替换
5. split() 重点. 字符串切割
6. startswith()需要知道. 判断字符串是否以xxx开头
7. upper()重点. 把字符串转化成大写
8. join() 重点. 字符串拼接.
9. len()注意,Len是内置函数,不是字符串独有的.计算长度
10. find 查找,找到了给索引,找不到给-1
11. index 索引,找到了给索引,找不到报错
12. isdigit 判断是否是数字组成的 缺陷,无法判断小数 ...


4. 关于列表(重点)
5. 关于元组(不做重点)
6. 关于字典类型(重点)
7. 关于set集合(不做重点)
8. 文件操作(重点)
9. 聊聊函数(待定)
"""